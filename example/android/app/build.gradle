plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file("local.properties")
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader("UTF-8") { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty("flutter.versionCode")
if (flutterVersionCode == null) {
    flutterVersionCode = "1"
}

def flutterVersionName = localProperties.getProperty("flutter.versionName")
if (flutterVersionName == null) {
    flutterVersionName = "1.0"
}

android {
    namespace = "ink.xcl.fllama_example"
    compileSdk = 35//flutter.compileSdkVersion
    ndkVersion = "28.0.12433566"//flutter.ndkVersion

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_17
        apiVersion = "2.1"
        languageVersion = "2.1"
        freeCompilerArgs = ["-progressive", "-Xjvm-default=all", "-Xjsr305=strict", "-Xno-call-assertions", "-Xno-param-assertions", "-Xno-receiver-assertions", "-Xskip-prerelease-check", "-Xallow-unstable-dependencies"]
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId = "ink.xcl.fllama_example"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdk = 23//flutter.minSdkVersion
        targetSdk = 35//flutter.targetSdkVersion
        multiDexEnabled true
        versionCode = flutterVersionCode.toInteger()
        versionName = flutterVersionName
        ndk {
            abiFilters("arm64-v8a", "x86_64", "armeabi-v7a")
        }
        externalNativeBuild {
            cmake {
                cFlags "-O3 -s -flto=thin -ffunction-sections -fdata-sections -fvisibility=hidden -fvisibility-inlines-hidden"
                abiFilters "arm64-v8a", "x86_64", "armeabi-v7a"
                cppFlags "-O3 -s -flto=thin -ffunction-sections -fdata-sections -fvisibility=hidden -fvisibility-inlines-hidden"
                arguments "-Wl,--gc-sections,--exclude-libs,ALL", "-Wl,-z,max-page-size=16384", "-DANDROID_STL=c++_static", "-DCMAKE_BUILD_TYPE=Release","-DANDROID_SUPPORT_FLEXIBLE_PAGE_SIZES=ON"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig = signingConfigs.debug
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug{
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packaging {
        dex {
            useLegacyPackaging true
        }
        jniLibs {
            useLegacyPackaging true
        }
        resources {
            resources.excludes += "DebugProbesKt.bin"
            resources.excludes += "META-INF/DEPENDENCIES"
            resources.excludes += "META-INF/NOTICE"
            resources.excludes += "META-INF/LICENSE"
            resources.excludes += "META-INF/LICENSE.txt"
            resources.excludes += "META-INF/NOTICE.txt"
            resources.excludes += "META-INF/LICENSE.md"
            resources.excludes += "META-INF/LICENSE-notice.md"
            resources.excludes += "META-INF/{AL2.0,LGPL2.1,LICENSE,NOTICE,DEPENDENCIES}"
            resources.excludes += "DebugProbesKt.bin"
            resources.excludes += "META-INF/*.kotlin_module"
            resources.excludes += "**/*.kotlin_module"
            resources.excludes += "**/*.version"
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation "androidx.core:core-ktx:1.15.0"
    coreLibraryDesugaring "com.android.tools:desugar_jdk_libs:2.1.3"
    implementation "androidx.appcompat:appcompat:1.7.0"
    implementation "com.google.android.material:material:1.13.0-alpha07"
    implementation "androidx.annotation:annotation:1.9.1"
    implementation platform("org.jetbrains.kotlin:kotlin-bom:2.0.21")
}